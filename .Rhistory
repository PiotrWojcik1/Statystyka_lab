knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
seqNorm1 <- sapply(1:50, FUN = function(k){(2*k+50-1)/(2*50^2)})
seqNorm1 <- sapply(1:50, FUN = function(k){(2*k+50-1)/(2*50^2)})
seqNorm1
sapply(1:10, function(i){estNorm1(rnorm(50, 1, 1))})
estNorm1 <- function(normData) {
return(sum(normData)/50)
}
estNorm2 <- function(normData) {
return(median(normData))
}
seqNorm1 <- sapply(1:50, FUN = function(k){(2*k+50-1)/(2*50^2)})
estNorm3 <- function(normData) {
return(sum(seqNorm1 * normData))
}
seqNorm2 <- sapply(1:50, FUN = function(i){dnorm(qnorm((i-1)/50)) - dnorm(qnorm(i/50))})
estNorm4 <- function(normData) return(sum(seqNorm2 * sort(normData)))
sapply(1:10, function(i){estNorm1(rnorm(50, 1, 1))})
sapply(1:100, function(i){estNorm1(rnorm(50, 1, 1))})
EstimatorsData1 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 1, 1))})
EstimatorsData1 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 4, 1))})
EstimatorsData1 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 1, 2))})
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
rows <- c("$Var(T)$", "$MSE$", "Obciążenie")
column1 <- c(varEstimator(Estimators1Data1, 1), varEstimator(Estimators2Data1, 1), varEstimator(Estimators3Data1, 1), varEstimator(Estimators4Data1, 1))
Estimators1Data1 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 1, 1))})
Estimators1Data2 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 4, 1))})
Estimators1Data3 <- sapply(1:10000, function(i){estNorm1(rnorm(50, 1, 2))})
Estimators2Data1 <- sapply(1:10000, function(i){estNorm2(rnorm(50, 1, 1))})
Estimators2Data2 <- sapply(1:10000, function(i){estNorm2(rnorm(50, 4, 1))})
Estimators2Data3 <- sapply(1:10000, function(i){estNorm2(rnorm(50, 1, 2))})
Estimators3Data1 <- sapply(1:10000, function(i){estNorm3(rnorm(50, 1, 1))})
Estimators3Data2 <- sapply(1:10000, function(i){estNorm3(rnorm(50, 4, 1))})
Estimators3Data3 <- sapply(1:10000, function(i){estNorm3(rnorm(50, 1, 2))})
Estimators4Data1 <- sapply(1:10000, function(i){estNorm4(rnorm(50, 1, 1))})
Estimators4Data2 <- sapply(1:10000, function(i){estNorm4(rnorm(50, 4, 1))})
Estimators4Data3 <- sapply(1:10000, function(i){estNorm4(rnorm(50, 1, 2))})
varEstimator <- function(data, theta) {
return(1/10000*sum((data - theta)^2))
}
BiasEst <- function(data, theta) {
return(1/10000*sum(data - theta))
}
rows <- c("$Var(T)$", "$MSE$", "Obciążenie")
rows <- c("$Var(T)$", "$MSE$", "Obciążenie")
rows <- c("$Var(T)$", "$MSE$", "Obciążenie")
column1 <- c(varEstimator(Estimators1Data1, 1), varEstimator(Estimators2Data1, 1), varEstimator(Estimators3Data1, 1), varEstimator(Estimators4Data1, 1))
knitr::kable(table, row.names = TRUE, escape = FALSE, format = "pipe", align = "c", col.names = c("$\\hat{\\theta_1}$", "$\\hat{\\theta_2}$", "$\\hat{\\theta_3}$", "$\\hat{\\theta_4}$"))
rows <- c("$Var(T)$", "$MSE$", "Obciążenie")
column1 <- c(varEstimator(Estimators1Data1, 1), varEstimator(Estimators2Data1, 1), varEstimator(Estimators3Data1, 1), varEstimator(Estimators4Data1, 1))
column2 <- c(varEstimator(Estimators1Data1, 1), varEstimator(Estimators2Data1, 1), varEstimator(Estimators3Data1, 1), 1/10000*sum((Estimators4Data1 - sum(seqNorm2))^2))
column3 <- c(BiasEst(Estimators1Data1, 1), BiasEst(Estimators2Data1, 1), BiasEst(Estimators3Data1, 1), 1/10000*sum(Estimators4Data1 - sum(seqNorm2)))
table <- data.frame(column1, column2, column3)
knitr::kable(table, row.names = TRUE, escape = FALSE, format = "pipe", align = "c", col.names = c("$\\hat{\\theta_1}$", "$\\hat{\\theta_2}$", "$\\hat{\\theta_3}$", "$\\hat{\\theta_4}$"))
4*sum(seqNorm2)
seqNorm2 <- sapply(1:50, FUN = function(i){dnorm(qnorm((i-1)/50)) - dnorm(qnorm(i/50))})
seqNorm2
set.seed(1)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
a<-sapply(1:10000,function(i)fun1(50,1,1))
a<-c()
a<-sapply(1:10000,function(i)fun1(50,1,1))
fun1<- function(n, theta, sd)
{
x<-rnorm(n, theta, sd)
weight<-runif(n,0,1)
weight<-weight/sum(weight)
L<- c(0:(n-1))/n
R<- c(1:n)/n
wi=dnorm(qnorm(L,0,1),0,1)-dnorm(qnorm(R,0,1),0,1)
theta1<-mean(x)
theta2<- median(x)
theta3<- sum(x*weight)
theta4<- sum(sort(x)*wi)
return(c(theta1,theta2,theta3,theta4))
}
a<-c()
a<-sapply(1:10000,function(i)fun1(50,1,1))
a
wi
L<- c(0:(n-1))/n
a[1,]
View(a)
v1=var(a[1,])
v1
a[2,]
b<-c(1:4)
d<-c(1:4)
e<-c(1:4)
for (i in 1:4){
vc=var(a[i ,])
vb=vc+ (mean(a[i ,])-1)^2
v3=mean(a[i ,])-1
b[i] <-vc
d[i] <-vb
e[i] <-v3
}
b
d
e
L<- c(0:(50-1))/50
R<- c(1:50)/50
wi=dnorm(qnorm(L,0,1),0,1)-dnorm(qnorm(R,0,1),0,1)
wi
sum(wi)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
estNorm4(rnorm(50, 0, 1))
estNorm4(rnorm(50, 0, 1))
estNorm4(rnorm(50, 0, 1))
Estimators4Data1
rnorm(50, 0, 1)
Estimators4Data2
Estimators4Data2
rnorm(50, 40, 1))
rnorm(50, 40, 1)
